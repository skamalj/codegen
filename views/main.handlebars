<!doctype html>
<html>
<head>
    <!-- Required meta tags -->
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <meta http-equiv="content-type" content="text/html; charset=UTF-8" />

    <title>My first BootstrapVue app</title>

    <!-- Required Stylesheets -->
    <link
      type="text/css"
      rel="stylesheet"
      href="https://unpkg.com/bootstrap/dist/css/bootstrap.min.css"
    />
    <link
      type="text/css"
      rel="stylesheet"
      href="https://unpkg.com/bootstrap-vue@latest/dist/bootstrap-vue.css"
    />

    <!-- Load polyfills to support older browsers -->
    <script src="https://polyfill.io/v3/polyfill.min.js?features=es2015%2CIntersectionObserver"></script>

    <!-- Required scripts -->
    <script src="https://unpkg.com/vue@latest/dist/vue.js"></script>
    <script src="https://unpkg.com/bootstrap-vue@latest/dist/bootstrap-vue.js"></script>
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
  </head>
<body>

<h2>Create Your App</h2>
<div id='example-3'>
    <div class="row">
      <div class="col-sm-1"></div>
      <div class="col-sm-10">
        <b-form-input v-model="baseName" placeholder="Enter App Name"></b-form-input>
        <b-form-select v-model="applicationType" :options="options" size="sm" class="mt-3"></b-form-select>
        <br>
        <b-form-select v-model="prodDatabaseType" :options="dboptions" size="sm" class="mt-3"></b-form-select>
        <br>
        <b-form-select v-model="authenticationType" :options="authoptions" size="sm" class="mt-3"></b-form-select>
        <br>
        <br>
        <button type="button" class="btn btn-info" v-on:click="gencode">Generate App</button>
      </div>
      <div class="col-sm-1"></div>
    </div>
</div>

<script>
new Vue({
  el: '#example-3',
  data: {
    baseName: "appa",
    applicationType: "microservice",
    prodDatabaseType: "mysql",
    authenticationType: "jwt",
    options: [ {value: "microservice", text: "microservice"},
    {value: "monolith", text: "monolith"} ],
    dboptions: [ {value: "mysql", text: "mysql"},
    {value: "oracle", text: "oracle"},{value: "postgresql", text: "postgresql"} ],
    authoptions: [ {value: "jwt", text: "jwt"},
    {value: "oauth2", text: "oauth2"} ],
  },
  methods: {
    gencode: function(){
      asyncgencode(this);
    }
  }
  
})
function asyncgencode(vueObj) {
    jdlinput = {"baseName": vueObj.baseName, "applicationType": vueObj.applicationType, 
    "prodDatabaseType": vueObj.prodDatabaseType, "authenticationType": vueObj.authenticationType }
	  axios.get("/genCode/"+ JSON.stringify(jdlinput)).then(function(response){
		  });
}
</script>

</body>
</html>






